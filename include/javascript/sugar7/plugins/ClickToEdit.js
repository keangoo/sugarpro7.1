/*
     * By installing or using this file, you are confirming on behalf of the entity
     * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
     * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
     * http://www.sugarcrm.com/master-subscription-agreement
     *
     * If Company is not bound by the MSA, then by installing or using this file
     * you are agreeing unconditionally that Company will be bound by the MSA and
     * certifying that you have authority to bind Company accordingly.
     *
     * Copyright  2004-2013 SugarCRM Inc.  All rights reserved.
     */
(function(app){app.events.on("app:init",function(){app.plugins.register('CteTabbing',['view'],{onAttach:function(component,plugin){this.on('init',function(){this.context.on('field:editable:tabkey',this.handleTabbing,this);},this);},handleTabbing:function(event,shiftKey,field){event.preventDefault();var indexFound=false,nextField={};_.find(this.$el.find('div.clickToEdit'),function(el,idx,list){var $el=$(el);if(indexFound===false&&$el.data('cid')==field.cid){indexFound=true;var nextIndex=(shiftKey===true)?idx-1:idx+1;if(nextIndex===list.length){nextIndex=0;}
nextField=list.splice(nextIndex,1);}
return indexFound;});$(nextField).click();}});app.plugins.register('ClickToEdit',['field'],{events:{'mouseenter div.clickToEdit':'showClickToEdit','mouseleave div.clickToEdit':'hideClickToEdit','click div.clickToEdit':'handleFieldClick'},_canEdit:false,_isInEdit:false,errorMessage:'',isErrorState:false,onAttach:function(component,plugin){this.on('init',_.bind(function(){if(this.checkIfCanEdit()){this.bindPluginEvents();}},this));},bindPluginEvents:function(){this.context.on('field:editable:open',function(cid){if(this.isErrorState){this.context.trigger('field:editable:error',this.cid);}else if(this._isInEdit==true&&this.cid!==cid){if(this.type=='enum'){this.$("select").select2("close");}
if(this.type!='date'){this.setMode('detail');}}},this);this.context.on('field:editable:error',function(cid){if(!_.isEqual(cid,this.cid)&&this.options.viewName=='edit'){this.setMode('detail');}},this);},checkIfCanEdit:function(){if(!_.isUndefined(this.def.click_to_edit)&&this.def.click_to_edit===true){var ctx=this.context.parent||this.context;var selectedUser=ctx.get('selectedUser')||app.user.toJSON();this._canEdit=_.isEqual(app.user.get('id'),selectedUser.id);this._canEdit=(this._canEdit&&app.acl.hasAccess('write',this.module,app.user.get('id'),this.name));if(this._canEdit&&this.model.has('sales_stage')){var salesStage=this.model.get('sales_stage'),disableIfSalesStageIs=_.union(app.metadata.getModule('Forecasts','config').sales_stage_won,app.metadata.getModule('Forecasts','config').sales_stage_lost);if(salesStage&&_.indexOf(disableIfSalesStageIs,salesStage)!=-1){this._canEdit=false;}}
if(this._canEdit){this.on('render',function(){var cteClass='clickToEdit';if(this.action==='edit'){cteClass+=' active'
this.$el.addClass("active");}else{this.$el.removeClass("active")}
this.$el.addClass("isEditable");this.$el.wrapInner('<div class="'+cteClass+'" data-cid="'+this.cid+'" />');},this);}}
return this._canEdit;},bindDomChange:function(){if(this.type==='date')return;if(!(this.model instanceof Backbone.Model))return;var self=this;var el=this.$el.find(this.fieldTag);el.on("change",function(){var value=self.validateField(self,self.unformat(el.val()));if(value!==false){self.isErrorState=false;self.errorMessage='';self.model.set(self.name,value);}else{var hb=Handlebars.compile("{{str key module context}}"),args={field_name:app.lang.get(self.def.label,self.module)};self.errorMessage=hb({'key':'LBL_EDITABLE_INVALID','module':self.module,'context':args});self.showErrors();el.select();}});if($.browser.msie&&el.is("input")){el.on("input",function(){el.focus().select();});}},showErrors:function(){if(this.isErrorState===false){this.isErrorState=true;this.$el.addClass('error');this.$el.find('.error-tooltip').addClass('add-on local').removeClass('hide').css('display','inline-block');this.$el.find('input').addClass('local-error');this.$el.find("[rel=tooltip]").tooltip('destroy');this.$el.find("[rel=tooltip]").tooltip({container:'body',placement:'top',title:this.errorMessage}).tooltip('show').hide();}},showClickToEdit:function(event){if(this._canEdit&&!this._isInEdit){var target=$(event.currentTarget);var icon='<span class="edit-icon"><i class="icon-pencil icon-sm"></i></span>';if(target.has('label.original').length==1){target=target.find('label.original').next();}
if(target.has('div.ellipsis_inline').length==1){target=target.find('div.ellipsis_inline');}
target.prepend(icon);}},hideClickToEdit:function(event){if(this._canEdit&&!this._isInEdit){$(event.currentTarget).find('span.edit-icon').remove();}},handleFieldClick:function(event){if(this._canEdit&&!this._isInEdit){this.setMode('edit');if(_.isFunction(this.focus)){this.focus();}else{var $el=this.$(this.fieldTag+":first");$el.focus().val($el.val()).select();}
if(this.type!=='image'){if(_.isFunction(this.bindKeyDown)){this.bindKeyDown(_.bind(this.keyDowned,this));}else{this.$(this.fieldTag).on("keydown.record"+this.cid,{field:this},_.bind(this.keyDowned,this));}
$(document).on("mousedown.record"+this.cid,{field:this},_.bind(this.mouseClicked,this));}
if(this.type==="enum"){this.model.once('change:'+this.name,function(){this.setMode('detail');},this);}
if(this.type==="date"){this.$el.closest('td').addClass('td-inline-edit');}}},keyDowned:function(evt){this.handleKeyDown.call(this,evt,evt.data.field);},mouseClicked:_.debounce(function(evt){this.fieldClose.call(this,evt,evt.data.field);},0),fieldClose:function(evt,field){var currFieldParent=field.$el,targetPlaceHolder=this.$(evt.target).parents("span[sfuuid='"+field.sfId+"']"),preventPlaceholder=this.$(evt.target).closest('.prevent-mousedown');if(preventPlaceholder.length>0||targetPlaceHolder.length>0||currFieldParent.find(":focus").length>0||!_.isEmpty(app.drawer._components)){return;}
if(this.isErrorState){this.$el.find(this.fieldTag).focus().select();return;}
this.isErrorState=false;this.setMode('detail');},handleKeyDown:function(e,field){if(e.which==27){this.isErrorState=false;this.setMode('detail');}else if(e.which==13){if(this.fieldValueChanged(field)){this.model.once('change:'+field.name,function(){this.setMode('detail');},this);}else{this.setMode('detail');}}else if(e.which==9){if(field.type!=='date'&&field.type!=='enum'&&this.fieldValueChanged((field))){field.$el.find(field.fieldTag).change();}
if(this.context){this.context.trigger('field:editable:tabkey',e,e.shiftKey,field);}
if(field.type==='date'){this.hideDatepicker();}}},fieldValueChanged:function(field){var elVal=field.$el.find(field.fieldTag).val();if(field.type=='currency'){var diff=Math.abs(this.unformat(elVal)-this.unformat(field.value));return((Math.round(diff*100))!=0)}else{return!_.isEqual(this.unformat(elVal),this.unformat(field.value));}},setMode:function(name){if(name==="detail"){this.$(this.fieldTag).off("keydown.record"+this.cid);$(document).off("mousedown.record"+this.cid);}
app.view.Field.prototype.setMode.call(this,name);this._isInEdit=(this.action==='edit');if(this._isInEdit){this.context.trigger('field:editable:open',this.cid);}else{this.$el.removeClass('error');}
if(this.action!=='edit'&&this.type=='date'){this.$el.closest('td').removeClass('td-inline-edit');}},validateField:function(field,newValue){if(_.isUndefined(newValue)||_.isEmpty(newValue)){newValue=this.$el.find(this.fieldTag).val();}
if(field.type==='int'){newValue=this._parsePercentage(newValue,0);if(this._verifyIntValue(newValue)){return newValue;}}else if(field.type==='currency'){newValue=this._parsePercentage(newValue,2);if(this._verifyCurrencyValue(newValue)){return newValue;}}else if(field.type==='date'){if(this._verifyDateString(newValue)){return newValue;}}else{return newValue;}
return false;},_verifyCurrencyValue:function(value){value=value.toString().trim();reg=new RegExp("^\\d+(\\.\\d+)?$");if(value.length==0||_.isNull(value.match(reg))){return false;}
return true;},_verifyIntValue:function(value){var regex=new RegExp("^\\d+$"),match=value.toString().match(regex);if(_.isNull(match)){return false;}
if(!_.isUndefined(this.def.validation)&&this.def.validation.type=='range'){if(!_.isUndefined(this.def.validation.min)&&!_.isUndefined(this.def.validation.max)){if(value<this.def.validation.min||value>this.def.validation.max){return false}}}
return true;},_verifyDateString:function(value){var dateFormat=(this.usersDatePrefs)?app.date.toDatepickerFormat(this.usersDatePrefs):'mm-dd-yyyy',isValid=true;if(_.isNaN(Date.parse(value))){isValid=false;if(_.isNaN(value.replace(/[\.\-]/g,'/'))){isValid=$.prototype.DateVerifier(value,dateFormat);}}
return isValid;},_parsePercentage:function(value,decimals){var orig=this.model.get(this.name),parts=value.toString().match(/^([+-])(\d+(\.\d+)?)(\%?)$/);if(parts){if(parts[4]=='%'){value=app.math.mul(app.math.div(parts[2],100),orig);}else{value=parts[2];}
if(parts[1]=='+'){value=app.math.add(orig,value);}else if(parts[1]=='-'){value=app.math.sub(orig,value);}
value=app.math.round(value,decimals);}
return value.toString();},hideDatepicker:function(ev){var hrsMins={hours:'00',minutes:'00'};this.datepickerVisible=false;this._getDatepickerValue();if(this._verifyDateString(this.dateValue)){this.leaveDirty=false;this.model.set(this.name,this._buildUnformatted(this.dateValue,hrsMins.hours,hrsMins.minutes));$('.datepicker').datepicker().hide();this.setMode('detail');}else{var hb=Handlebars.compile("{{str key module context}}"),args={field_name:app.lang.get(this.def.label,this.module)};this.leaveDirty=true;this.errorMessage=hb({'key':'LBL_EDITABLE_INVALID','module':this.module,'context':args});this.showErrors();}}});});})(SUGAR.App);