/*********************************************************************************
     * By installing or using this file, you are confirming on behalf of the entity
     * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
     * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
     * http://www.sugarcrm.com/master-subscription-agreement
     *
     * If Company is not bound by the MSA, then by installing or using this file
     * you are agreeing unconditionally that Company will be bound by the MSA and
     * certifying that you have authority to bind Company accordingly.
     *
     * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
     ********************************************************************************/
({fieldSelector:'.attachments',fileInputSelector:'.fileinput',$node:null,fileCounter:0,initialize:function(options){var launchUploadEvent=options.def.uploadEvent||'attachment:upload';this.events=_.extend({},this.events,options.def.events,{'change .fileinput':'uploadFile'});app.view.Field.prototype.initialize.call(this,options);this.context.on('attachment:add',this.addAttachment,this);this.context.on(launchUploadEvent,this.launchFilePicker,this);this.context.on('attachment:upload:remove',this.removeUploadedAttachment,this);this.context.on('attachments:remove-by-tag',this.removeAttachmentsByTag,this);this.context.on('attachments:remove-by-id',this.removeAttachmentsById,this);this.clearUserAttachmentCache();},_keyHandler:function(e){if((event.keyCode==8||event.keyCode==46)){return true;}
return false;},_render:function(){var result=app.view.Field.prototype._render.call(this);this.$node=this.$(this.fieldSelector);this.$node.select2({allowClear:true,multiple:true,containerCssClass:'select2-choices-pills-close',containerCss:{'width':'100%'},tags:[],formatSelection:this.formatSelection,width:'off',escapeMarkup:function(m){return m;}});var inp=this.$el.find('.attachments.select2-container .select2-choices .select2-search-field .select2-input');if(inp&&inp[0]){$(inp[0]).keypress(this._keyHandler);$(inp[0]).keyup(this._keyHandler);$(inp[0]).keydown(this._keyHandler);}
this.refreshFromModel();return result;},addAttachment:function(attachment){this.addAttachmentToContainer(attachment);this.updateModel();},addAttachmentToContainer:function(attachment){var attachments=this.getDisplayedAttachments();if(attachment.replaceId){attachments=_.map(attachments,function(existing){return(existing.id==attachment.replaceId)?attachment:existing;});delete attachment.replaceId;}else{attachments.push(attachment);}
this.setDisplayedAttachments(attachments);},bindDomChange:function(){this.$node=this.$(this.fieldSelector);this.$node.on("change",_.bind(this.handleChange,this));this.$node.on("opening",function(event){event.preventDefault();});},clearUserAttachmentCache:function(){var clearCacheUrl=app.api.buildURL('Mail/attachment',"cache");app.api.call('delete',clearCacheUrl);},formatSelection:function(attachment){var item='<span data-id="'+attachment.id+'">'+attachment.nameForDisplay+'</span>';if(attachment.showProgress){item+=' <i class="icon-refresh icon-spin"></i>';}
return item;},getDisplayedAttachments:function(){return this.$node.select2('data');},handleChange:function(event){this.updateModel();if(event&&event.removed&&event.removed.type){this.notifyAttachmentRemoved(event.removed);}
this.notifyAttachmentsChanged();},notifyAttachmentRemoved:function(attachment){this.context.trigger('attachment:'+attachment.type+':remove',attachment);},notifyAttachmentsChanged:function(attachments){attachments=attachments||this.getDisplayedAttachments();this.context.trigger('attachments:updated',attachments);},launchFilePicker:function(){this.$(this.fileInputSelector).click();},refreshFromModel:function(){var attachments=[];if(this.model.has(this.name)){attachments=this.model.get(this.name);}
this.setDisplayedAttachments(attachments);},removeAttachmentsByIterator:function(iterator){var attachments=this.getDisplayedAttachments();attachments=_.reject(attachments,iterator);this.setDisplayedAttachments(attachments);this.updateModel();},removeAttachmentsById:function(id){this.removeAttachmentsByIterator(_.bind(function(attachment){if(attachment.id&&attachment.id===id){this.notifyAttachmentRemoved(attachment);return true;}},this));},removeAttachmentsByTag:function(tag){this.removeAttachmentsByIterator(_.bind(function(attachment){if(attachment.tag&&attachment.tag===tag){this.notifyAttachmentRemoved(attachment);return true;}},this));},removeUploadedAttachment:function(attachment){var deleteUrl=app.api.buildURL('Mail/attachment',"delete",{id:attachment.id});app.api.call('delete',deleteUrl);},setDisplayedAttachments:function(attachments){this.$node.select2('data',attachments);this.notifyAttachmentsChanged(attachments);},updateModel:function(){this.model.set(this.name,this.getDisplayedAttachments());},uploadFile:function(){var $fileInput=this.$(this.fileInputSelector),ajaxParams={files:$fileInput,iframe:true},fileId;if(_.isEmpty(this.getFileInputVal())){return;}
this.fileCounter++;fileId='upload'+this.fileCounter;this.addAttachmentToContainer({id:fileId,nameForDisplay:this.getFileInputVal().split('\\').pop(),showProgress:true});var myURL=app.api.buildURL('Mail/attachment',null,null,{oauth_token:app.api.getOAuthToken()});app.api.call('create',myURL,null,{success:_.bind(function(result){if(this.disposed===true)return;if(!result.guid){this.handleUploadError(fileId);app.logger.error('Attachment Upload Failed - no guid returned from API');return;}
result.id=result.guid;delete result.guid;result.type='upload';result.replaceId=fileId;this.context.trigger('attachment:add',result);$fileInput.val(null);},this),error:_.bind(function(e){if(this.disposed===true)return;this.handleUploadError(fileId);app.logger.error('Attachment Upload Failed: '+e);},this)},ajaxParams);},getFileInputVal:function($fileInput){$fileInput=$fileInput||this.$(this.fileInputSelector);if(_.isUndefined($fileInput)){return null;}
return $fileInput.val();},handleUploadError:function(fileId){var errorMessage=app.lang.getAppString('LBL_EMAIL_ATTACHMENT_UPLOAD_FAILED');this.context.trigger('attachments:remove-by-id',fileId);app.alert.show('upload_error',errorMessage);},bindDataChange:$.noop,_dispose:function(){this.$node.select2('destroy');app.view.Field.prototype._dispose.call(this);}})