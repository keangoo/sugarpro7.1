/*********************************************************************************
     * By installing or using this file, you are confirming on behalf of the entity
     * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
     * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
     * http://www.sugarcrm.com/master-subscription-agreement
     *
     * If Company is not bound by the MSA, then by installing or using this file
     * you are agreeing unconditionally that Company will be bound by the MSA and
     * certifying that you have authority to bind Company accordingly.
     *
     * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
     ********************************************************************************/
({plugins:['GridBuilder','ErrorDecoration'],events:{'click [name=previous_button]:not(.disabled)':'previous','click [name=next_button]:not(.disabled)':'next'},progress:null,areAllRequiredFieldsNonEmpty:false,initialize:function(options){this.fieldsToValidate=this._fieldsToValidate(options.meta);Handlebars.registerPartial("wizard-page.header",app.template.get("wizard-page.header"));Handlebars.registerPartial("wizard-page.footer",app.template.get("wizard-page.footer"));app.view.View.prototype.initialize.call(this,options);},_render:function(){this._buildGridsFromPanelsMetadata(this.meta.panels);this.progress=this.layout.getProgress();this.percentComplete=this._getPercentageComplete();this.wizardCompleted=(this.progress.page===this.progress.lastPage)?true:false;app.view.View.prototype._render.call(this);this.checkIfPageComplete();},bindDataChange:function(){var self=this;if(this.model){this.listenTo(this.model,"sync",function(){self.checkIfPageComplete();});_.each(this.fieldsToValidate,function(field){if(field&&field.required){self.listenTo(self.model,'change:'+field.name,function(){self.checkIfPageComplete();});}});}},_buildGridsFromPanelsMetadata:function(panels){_.each(panels,function(panel){if(_.isFunction(this.getGridBuilder)){var options={fields:panel.fields,columns:panel.columns,labels:panel.labels,labelsOnTop:panel.labelsOnTop},gridResults=this.getGridBuilder(options).build();panel.grid=gridResults.grid;}},this);},_getPercentageComplete:function(){return Math.floor(this.progress.page / this.progress.lastPage*100);},updateButtons:function(){var prevBtn=this.getField("previous_button");if(prevBtn){if(this.progress&&this.progress.page>1){prevBtn.show();}else{prevBtn.hide();}}
var nextBtn=this.getField("next_button");if(nextBtn){nextBtn.setDisabled(!this.isPageComplete());}},showPage:function(){return app.acl.hasAccessToModel(this.action,this.model);},isPageComplete:function(){return true;},checkIfPageComplete:function(evt){var self=this;this.areAllRequiredFieldsNonEmpty=true;_.each(this.fields,function(field){if(!field.def.required)return;var value=field.$(field.fieldTag+".required").val();var invalid=app.validation.requiredValidator(field.def,field.name,field.model,value);if(invalid){self.areAllRequiredFieldsNonEmpty=false;}});this.updateButtons();},_fieldsToValidate:function(meta){meta=meta||{};var fields={};_.each(_.flatten(_.pluck(meta.panels,"fields")),function(field){fields[field.name]=field;});return fields;},next:function(){var self=this;if(this.progress.page!==this.progress.lastPage){this.beforeNext(function(success){if(success){self.progress=self.layout.nextPage();}else{app.logger.debug("There was an unknown issue after calling beforeNext from wizard");}});}else{this.beforeFinish(function(success){if(success){self.finish();}else{app.logger.debug("There was an unknown issue after calling beforeFinish from wizard");}});}},beforeNext:function(callback){app.logger.debug("wizard's beforeNext called directly. Derived controllers should have overridden this!");callback(true);},beforeFinish:function(callback){app.logger.debug("wizard's beforeFinish called directly. Derived controller should have overridden this!");callback(true);},previous:function(){this.progress=this.layout.previousPage();},finish:function(){this.layout.finished();}})