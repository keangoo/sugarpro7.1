/*********************************************************************************
     * By installing or using this file, you are confirming on behalf of the entity
     * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
     * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
     * http://www.sugarcrm.com/master-subscription-agreement
     *
     * If Company is not bound by the MSA, then by installing or using this file
     * you are agreeing unconditionally that Company will be bound by the MSA and
     * certifying that you have authority to bind Company accordingly.
     *
     * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
     ********************************************************************************/
({extendsFrom:'RecordlistView',fallbackFieldTemplate:'list',plugins:['ErrorDecoration','Editable'],contextEvents:{"list:editall:fire":"toggleEdit","list:editrow:fire":"editClicked","list:unlinkrow:fire":"warnUnlink"},initialize:function(options){app.view.invokeParent(this,{type:'view',name:'recordlist',method:'initialize',args:[options]});if(app.config.maxSubpanelResult){var options={limit:app.config.maxSubpanelResult};var collectionOptions=this.context.has('collectionOptions')?this.context.get('collectionOptions'):{};this.context.set('collectionOptions',_.extend(collectionOptions,options));}
this.layout.on("hide",this.toggleList,this);this.listenTo(this.layout.layout,'filter:change',this.renderOnFilterChanged);app.routing.before("route",this.beforeRouteUnlink,this,true);$(window).on("beforeunload.unlink"+this.cid,_.bind(this.warnUnlinkOnRefresh,this));},renderOnFilterChanged:function(){this.collection.trigger('reset');this.render();},_initializeMetadata:function(){return _.extend({},app.metadata.getView(null,'subpanel-list',true),app.metadata.getView(this.options.module,'record-list',true),app.metadata.getView(this.options.module,'subpanel-list',true));},unlinkModel:function(){var self=this,model=this._modelToUnlink;model.destroy({showAlerts:{'process':true,'success':{messages:self.getUnlinkMessages(self._modelToUnlink).success}},relate:true,success:function(){var redirect=self._targetUrl!==self._currentUrl;self._modelToUnlink=null;self.collection.remove(model,{silent:redirect});if(redirect){self.unbindBeforeRouteUnlink();app.router.navigate(self._targetUrl,{trigger:true});return;}
self.collection.trigger('reset');self.render();}});},toggleList:function(show){this.$el[show?'show':'hide']();},beforeRouteUnlink:function(){if(this._modelToUnlink){this.warnUnlink(this._modelToUnlink);return false;}
return true;},getUnlinkMessages:function(model){var messages={},name=model.get('name')||(model.get('first_name')+' '+model.get('last_name'))||'',context=app.lang.get('LBL_MODULE_NAME_SINGULAR',model.module).toLowerCase()+' '+name.trim();messages.confirmation=app.lang.get('NTC_UNLINK_CONFIRMATION')+context+'?';messages.success=app.lang.get('NTC_UNLINK_SUCCESS')+context+'.';return messages;},warnUnlink:function(model){var self=this;this._modelToUnlink=model;self._targetUrl=Backbone.history.getFragment();if(self._targetUrl!==self._currentUrl){app.router.navigate(this._currentUrl,{trigger:false,replace:true});}
app.alert.show('unlink_confirmation',{level:'confirmation',messages:self.getUnlinkMessages(model).confirmation,onConfirm:_.bind(self.unlinkModel,self),onCancel:function(){self._modelToUnlink=null;}});},warnUnlinkOnRefresh:function(){if(this._modelToUnlink){return this.getUnlinkMessages(this._modelToUnlink).confirmation;}},unbindBeforeRouteUnlink:function(){app.routing.offBefore("route",this.beforeRouteUnlink,this);$(window).off("beforeunload.unlink"+this.cid);},_dispose:function(){this.unbindBeforeRouteUnlink();this._super('_dispose');}})