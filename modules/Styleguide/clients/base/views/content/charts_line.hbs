{{!
/*********************************************************************************
 * By installing or using this file, you are confirming on behalf of the entity
 * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
 * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
 * http://www.sugarcrm.com/master-subscription-agreement
 *
 * If Company is not bound by the MSA, then by installing or using this file
 * you are agreeing unconditionally that Company will be bound by the MSA and
 * certifying that you have authority to bind Company accordingly.
 *
 * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
 ********************************************************************************/

}}
<section id="line">
  <div class="page-header">
    <h2>Line <small>used for comparing data series</small></h2>
  </div>
  <div class="row-fluid">
    <div class="span6">
      <h3>Standard Line Chart</h3>
      <p>Line chart with baseline y-axis. [<a href="styleguide/content/charts/lineChart.html" target="_blank">Full Screen</a> | <a href="styleguide/content/charts/lineChart_colors.html" target="_blank">Color Options</a>].</p>
      <div>
<div id="line1" class="nv-chart">
<svg></svg>
</div>
      </div>
    </div>
    <div class="span6">
      <h3>Stacked Area Chart</h3>
      <p>Line chart with cumulative y-axis. [<a href="styleguide/content/charts/stackedAreaChart.html" target="_blank">Full Screen</a> | <a href="styleguide/content/charts/stackedAreaChart_colors.html" target="_blank">Color Options</a>]</p>
      <div>
<div id="area" class="nv-chart">
<svg></svg>
</div>
      </div>
    </div>
  </div>
</section>

<script src="styleguide/content/charts/data/line_data.js"></script>


<script>
  // Line chart
  nv.addGraph(function() {
    var chart = nv.models.lineChart()
          .x(function(d) { return d[0] })
          .y(function(d) { return d[1] })
          .showTitle(false)
          .tooltips(true)
          .showControls(false)
          .tooltipContent( function(key, x, y, e, graph) {
              return '<p>Category: <b>' + key + '</b></p>' +
                     '<p>Amount: <b>$' +  parseInt(y) + 'M</b></p>' +
                     '<p>Date: <b>' +  x + '</b></p>'
            })
          //.forceY([0,400]).forceX([0,6]);
        ;

    chart.xAxis
        .tickFormat(function(d) { return d3.time.format('%x')(new Date(d)) });

    chart.yAxis
        .axisLabel('Voltage (v)')
        .tickFormat(d3.format(',.2f'));

    d3.select('#line1 svg')
        .datum(line_data_default)
      .transition().duration(500)
        .call(chart);

    return chart;
  });

  // Stacked area chart
  nv.addGraph(function() {

    var chart = nv.models.stackedAreaChart()
          .x(function(d) { return d[0] })
          .y(function(d) { return d[1] })
          .tooltipContent( function(key, x, y, e, graph) {
              return '<p>Category: <b>' + key + '</b></p>' +
                     '<p>Amount: <b>$' +  parseInt(y) + 'M</b></p>' +
                     '<p>Date: <b>' +  x + '</b></p>'
            })
          .showTitle(false)
          .tooltips(true)
          .showControls(false)
          .colorData( 'graduated', {c1: '#e8e2ca', c2: '#3e6c0a', l: line_data_default.data.length} )
          //.colorData( 'class' )
          //.colorData( 'default' )
          //.clipEdge(true)
        ;

    chart.xAxis
        .tickFormat(function(d) { return d3.time.format('%x')(new Date(d)) });

    chart.yAxis
        .axisLabel('Expenditures ($)')
        .tickFormat(d3.format(',.2f'));

    d3.select('#area svg')
        .datum(line_data_default)
      .transition().duration(500)
        .call(chart);

    return chart;
  });
</script>
